name: Orchestrator

on:
  push:
  workflow_dispatch:
    inputs:
      profile:
        description: "Profil aus publish.yml"
        required: false
        default: "default"
      force_push_to_ghcr:
        description: "Auch in privaten Repos Image nach GHCR pushen"
        required: false
        default: "false"

permissions:
  contents: write
  packages: write

jobs:
  build_image:
    if: ${{ !github.event.repository.private || (github.event_name == 'workflow_dispatch' && github.event.inputs.force_push_to_ghcr == 'true') }}
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      repository: ${{ steps.repository_slug.outputs.value }}
    steps:
      - uses: actions/checkout@v4

      - name: Derive lowercase repository slug
        id: repository_slug
        run: echo "value=${GITHUB_REPOSITORY,,}" >> "$GITHUB_OUTPUT"

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push orchestrator image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .github/tools/docker/Dockerfile
          target: publisher
          push: true
          tags: |
            ghcr.io/${{ steps.repository_slug.outputs.value }}/publisher:sha-${{ github.sha }}
            ghcr.io/${{ steps.repository_slug.outputs.value }}/publisher:main
          cache-from: |
            type=registry,ref=ghcr.io/${{ steps.repository_slug.outputs.value }}/publisher:buildcache
          cache-to: |
            type=registry,ref=ghcr.io/${{ steps.repository_slug.outputs.value }}/publisher:buildcache,mode=max
            
  orchestrate:
    needs: [build_image]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    env:
      PROFILE: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.profile || 'default' }}
      BASE_SHA: ${{ github.event.before }}
      REPO_VISIBILITY: ${{ github.event.repository.private && 'private' || 'public' }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx (local build)
        if: ${{ needs.build_image.result != 'success' }}
        uses: docker/setup-buildx-action@v3

      - name: Build orchestrator image locally
        if: ${{ needs.build_image.result != 'success' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .github/tools/docker/Dockerfile
          target: publisher
          push: false
          load: true
          tags: erda-publisher:local
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Log in to GHCR
        if: ${{ needs.build_image.result == 'success' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull published image
        if: ${{ needs.build_image.result == 'success' }}
        run: |

          docker pull ghcr.io/${{ needs.build_image.outputs.repository }}/publisher@${{ needs.build_image.outputs.digest }}

      - name: Run workflow orchestrator
        env:
          IMAGE_REF: ${{ needs.build_image.result == 'success' && format('ghcr.io/{0}/publisher@{1}', needs.build_image.outputs.repository, needs.build_image.outputs.digest) || 'erda-publisher:local' }}

        run: |
          set -euo pipefail
          IMAGE="$IMAGE_REF"
          BASE="$BASE_SHA"
          EXTRA_ARGS=""
          if [ -n "$BASE" ]; then
            EXTRA_ARGS="--base $BASE"
          fi
          docker run --rm \
            -v "$PWD:/workspace" \
            -w /workspace \
            -e GITHUB_SHA="${GITHUB_SHA}" \
            -e GITHUB_REPOSITORY="${GITHUB_REPOSITORY}" \
            -e GITHUB_OUTPUT="${GITHUB_OUTPUT}" \
            -e ORCHESTRATOR_PROFILE="${PROFILE}" \
            -e ORCHESTRATOR_REPO_VISIBILITY="${REPO_VISIBILITY}" \
            "$IMAGE" \
            python -m tools.workflow_orchestrator \
              --profile "${PROFILE}" \
              --repository "${GITHUB_REPOSITORY}" \
              --manifest publish.yml \
              --repo-visibility auto \
              --commit "${GITHUB_SHA}" \
              ${EXTRA_ARGS} \
              --reset-others
