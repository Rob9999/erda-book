name: GitBook Style Rename

on:
  workflow_call:
  workflow_dispatch:

jobs:
  rename-and-summary:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Rename files to GitBook style
        run: |
          python .github/tools/publishing/gitbook_style.py rename --root .

      - name: Ensure clean GitBook summary
        run: |
          python .github/tools/publishing/gitbook_style.py summary --root .

      - name: Commit changes
        id: commit
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit -m "chore: regenerate summary.md from book.json structure [skip ci]"
            echo "committed=true" >> "$GITHUB_OUTPUT"
          else
            echo "SUMMARY.MD OK"
            echo "committed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Update publish build flags
        if: steps.commit.outputs.committed == 'true'
        id: flags
        run: |
          pip install pyyaml
          commit=$(git rev-parse HEAD)
          base=$(git rev-parse HEAD^)
          args=("--commit" "$commit")
          if [ -n "$base" ]; then
            args+=("--base" "$base")
          fi
          python .github/tools/publishing/set_publish_flag.py "${args[@]}"
          if [ -n "$(git status --porcelain publish.yml publish.yaml 2>/dev/null)" ]; then
            git add publish.yml publish.yaml 2>/dev/null
            git commit -m "chore: update publish build flags"
            echo "flags=true" >> "$GITHUB_OUTPUT"
          else
            echo "flags=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Push changes
        if: steps.commit.outputs.committed == 'true' || steps.flags.outputs.flags == 'true'
        run: |
          branch="${{ github.ref_name }}"
          git pull --rebase origin "$branch"
          git push origin HEAD:"$branch"
